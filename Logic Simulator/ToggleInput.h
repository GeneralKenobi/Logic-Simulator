#pragma once
#include "stdafx.h"

// Class for a toggle input - input part which can be toggled by the user
// between turned on and turned off
class ToggleInput : public BaseInput
{

protected:

	#pragma region Members	

	// Determines whether this input is treated as input for custom logic
	bool mIsCustomLogicInput = true;

	#pragma endregion	

public:

	#pragma region Constructors/Destructors

	// Default Constructor
	ToggleInput();

	// Default Destructor
	virtual ~ToggleInput() {}

	#pragma endregion

	#pragma region Accessors

	// Returns the number of selectable lines in this part's info
	virtual int SelectableLines();

	// Getter to the mIsCustomLogicInput value
	bool IsCustomLogicInput() { return mIsCustomLogicInput; }

	#pragma endregion

	#pragma region Virtual Methods

	// Performs quick list action. Toggles the input
	virtual void QuickListActionRequest();

	// Returns a list with lines that compse a full info on this part.
	virtual std::list<Line> GenerateInfo();

	// Returns status lines for the part which has the same structure as list generated by GenerateInfo.
	virtual std::list<Line> GenerateStatus();

	// Prints the compact information on this part (dedicated to the list of parts)
	virtual void PrintList();
	
	// Performs quick action for the given line (if there's an action to perform)
	virtual void QuickActionRequest(int index);

	// Generates string to save in a file which allows to recreate this part
	virtual std::vector<std::string> GenerateStorageString();

	// Interprets a storage string and assigns the settings saved in it. 
	virtual void InterpretStorageString(std::string settings, std::list<std::pair<int, int>>& connections);


	#pragma endregion

};